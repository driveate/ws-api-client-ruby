=begin
#Wheel Fitment API

#The Wheel Fitment API allows for programmatic access to the database of www.wheel-size.com and its services. Use this API to retrieve information about vehicle fitment database for rims and tires, including OE and option fitments, and plus/minus sizing fitment information. A variety of country and language specific options are available. The coverage of fitment data for vehicles manufactured since 2000 is nearly 100%.  The information about fitment data is updated on a daily basis.

OpenAPI spec version: v1
Contact: info@wheel-size.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.0-SNAPSHOT

=end

require 'uri'

module WsApiClient
  class BoltPatternsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get list of bolt patterns
    # A list of possible bolt patterns with the number of matching model modifications
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :stud Number of stud holes (e.g. &#x60;5&#x60;)
    # @option opts [Float] :stud_min Lower bound for number of stud holes (e.g. &#x60;4&#x60;)
    # @option opts [Float] :stud_max Upper bound for number of stud holes (e.g. &#x60;7&#x60;)
    # @option opts [Float] :pcd Pitch circle diameter, mm (e.g. &#x60;115&#x60;)
    # @option opts [Float] :pcd_min Lower bound for pitch circle diameter, mm (e.g. &#x60;105&#x60;)
    # @option opts [Float] :pcd_max Upper bound for pitch circle diameter, mm (e.g. &#x60;135&#x60;)
    # @option opts [String] :brands Show information only for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;mitsubishi,nissan,toyota&#x60;)
    # @option opts [String] :brands_exclude Don&#39;t show information for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;geely,great-wall&#x60;)
    # @option opts [String] :countries Show information for local manufacturers from specified countries only. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;us,gb,jp&#x60;)
    # @option opts [String] :countries_exclude Don&#39;t show information for local manufacturers from specified countries. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;ru,ua&#x60;)
    # @return [Array<BoltPattern>]
    def bolt_patterns_list(opts = {})
      data, _status_code, _headers = bolt_patterns_list_with_http_info(opts)
      data
    end

    # Get list of bolt patterns
    # A list of possible bolt patterns with the number of matching model modifications
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :stud Number of stud holes (e.g. &#x60;5&#x60;)
    # @option opts [Float] :stud_min Lower bound for number of stud holes (e.g. &#x60;4&#x60;)
    # @option opts [Float] :stud_max Upper bound for number of stud holes (e.g. &#x60;7&#x60;)
    # @option opts [Float] :pcd Pitch circle diameter, mm (e.g. &#x60;115&#x60;)
    # @option opts [Float] :pcd_min Lower bound for pitch circle diameter, mm (e.g. &#x60;105&#x60;)
    # @option opts [Float] :pcd_max Upper bound for pitch circle diameter, mm (e.g. &#x60;135&#x60;)
    # @option opts [String] :brands Show information only for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;mitsubishi,nissan,toyota&#x60;)
    # @option opts [String] :brands_exclude Don&#39;t show information for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;geely,great-wall&#x60;)
    # @option opts [String] :countries Show information for local manufacturers from specified countries only. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;us,gb,jp&#x60;)
    # @option opts [String] :countries_exclude Don&#39;t show information for local manufacturers from specified countries. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;ru,ua&#x60;)
    # @return [Array<(Array<BoltPattern>, Fixnum, Hash)>] Array<BoltPattern> data, response status code and response headers
    def bolt_patterns_list_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BoltPatternsApi.bolt_patterns_list ...'
      end
      # resource path
      local_var_path = '/bolt-patterns/'

      # query parameters
      query_params = {}
      query_params[:'stud'] = opts[:'stud'] if !opts[:'stud'].nil?
      query_params[:'stud_min'] = opts[:'stud_min'] if !opts[:'stud_min'].nil?
      query_params[:'stud_max'] = opts[:'stud_max'] if !opts[:'stud_max'].nil?
      query_params[:'pcd'] = opts[:'pcd'] if !opts[:'pcd'].nil?
      query_params[:'pcd_min'] = opts[:'pcd_min'] if !opts[:'pcd_min'].nil?
      query_params[:'pcd_max'] = opts[:'pcd_max'] if !opts[:'pcd_max'].nil?
      query_params[:'brands'] = opts[:'brands'] if !opts[:'brands'].nil?
      query_params[:'brands_exclude'] = opts[:'brands_exclude'] if !opts[:'brands_exclude'].nil?
      query_params[:'countries'] = opts[:'countries'] if !opts[:'countries'].nil?
      query_params[:'countries_exclude'] = opts[:'countries_exclude'] if !opts[:'countries_exclude'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['user_key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<BoltPattern>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BoltPatternsApi#bolt_patterns_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Model modifications by bolt pattern
    # Get a list of model modifications matching to the given bolt pattern
    # @param bolt_pattern Bolt pattern combines number of stud holes and pitch circle diameter. Use _**&#x60;GET /bolt-patterns/&#x60;**_ to get possible values (e.g. &#x60;5x105&#x60;)
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :rim_diameter Rim diameter, in (e.g. &#x60;16&#x60;)
    # @option opts [Float] :rim_width Rim width, in (e.g. &#x60;7&#x60;)
    # @option opts [Float] :offset Rim offset, mm (e.g. &#x60;40&#x60;)
    # @option opts [Float] :offset_min Lower bound for rim offset, mm (e.g. &#x60;35&#x60;)
    # @option opts [Float] :offset_max Upper bound for rim offset, mm (e.g. &#x60;45&#x60;)
    # @option opts [Float] :cb Centre bore value, mm (e.g. &#x60;60&#x60;)
    # @option opts [Float] :cb_min Lower bound for centre bore value, mm (e.g. &#x60;55&#x60;)
    # @option opts [Float] :cb_max Upper bound for centre bore value, mm (e.g. &#x60;65&#x60;)
    # @option opts [String] :lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only
    # @option opts [String] :brands Show information only for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;mitsubishi,nissan,toyota&#x60;)
    # @option opts [String] :brands_exclude Don&#39;t show information for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;geely,great-wall&#x60;)
    # @option opts [String] :countries Show information for local manufacturers from specified countries only. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;us,gb,jp&#x60;)
    # @option opts [String] :countries_exclude Don&#39;t show information for local manufacturers from specified countries. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;ru,ua&#x60;)
    # @return [Array<MakeWithModels>]
    def bolt_patterns_read(bolt_pattern, opts = {})
      data, _status_code, _headers = bolt_patterns_read_with_http_info(bolt_pattern, opts)
      data
    end

    # Model modifications by bolt pattern
    # Get a list of model modifications matching to the given bolt pattern
    # @param bolt_pattern Bolt pattern combines number of stud holes and pitch circle diameter. Use _**&#x60;GET /bolt-patterns/&#x60;**_ to get possible values (e.g. &#x60;5x105&#x60;)
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :rim_diameter Rim diameter, in (e.g. &#x60;16&#x60;)
    # @option opts [Float] :rim_width Rim width, in (e.g. &#x60;7&#x60;)
    # @option opts [Float] :offset Rim offset, mm (e.g. &#x60;40&#x60;)
    # @option opts [Float] :offset_min Lower bound for rim offset, mm (e.g. &#x60;35&#x60;)
    # @option opts [Float] :offset_max Upper bound for rim offset, mm (e.g. &#x60;45&#x60;)
    # @option opts [Float] :cb Centre bore value, mm (e.g. &#x60;60&#x60;)
    # @option opts [Float] :cb_min Lower bound for centre bore value, mm (e.g. &#x60;55&#x60;)
    # @option opts [Float] :cb_max Upper bound for centre bore value, mm (e.g. &#x60;65&#x60;)
    # @option opts [String] :lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only
    # @option opts [String] :brands Show information only for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;mitsubishi,nissan,toyota&#x60;)
    # @option opts [String] :brands_exclude Don&#39;t show information for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;geely,great-wall&#x60;)
    # @option opts [String] :countries Show information for local manufacturers from specified countries only. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;us,gb,jp&#x60;)
    # @option opts [String] :countries_exclude Don&#39;t show information for local manufacturers from specified countries. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;ru,ua&#x60;)
    # @return [Array<(Array<MakeWithModels>, Fixnum, Hash)>] Array<MakeWithModels> data, response status code and response headers
    def bolt_patterns_read_with_http_info(bolt_pattern, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BoltPatternsApi.bolt_patterns_read ...'
      end
      # verify the required parameter 'bolt_pattern' is set
      if @api_client.config.client_side_validation && bolt_pattern.nil?
        fail ArgumentError, "Missing the required parameter 'bolt_pattern' when calling BoltPatternsApi.bolt_patterns_read"
      end
      # resource path
      local_var_path = '/bolt-patterns/{bolt_pattern}/'.sub('{' + 'bolt_pattern' + '}', bolt_pattern.to_s)

      # query parameters
      query_params = {}
      query_params[:'rim_diameter'] = opts[:'rim_diameter'] if !opts[:'rim_diameter'].nil?
      query_params[:'rim_width'] = opts[:'rim_width'] if !opts[:'rim_width'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'offset_min'] = opts[:'offset_min'] if !opts[:'offset_min'].nil?
      query_params[:'offset_max'] = opts[:'offset_max'] if !opts[:'offset_max'].nil?
      query_params[:'cb'] = opts[:'cb'] if !opts[:'cb'].nil?
      query_params[:'cb_min'] = opts[:'cb_min'] if !opts[:'cb_min'].nil?
      query_params[:'cb_max'] = opts[:'cb_max'] if !opts[:'cb_max'].nil?
      query_params[:'lang'] = opts[:'lang'] if !opts[:'lang'].nil?
      query_params[:'brands'] = opts[:'brands'] if !opts[:'brands'].nil?
      query_params[:'brands_exclude'] = opts[:'brands_exclude'] if !opts[:'brands_exclude'].nil?
      query_params[:'countries'] = opts[:'countries'] if !opts[:'countries'].nil?
      query_params[:'countries_exclude'] = opts[:'countries_exclude'] if !opts[:'countries_exclude'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['user_key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<MakeWithModels>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BoltPatternsApi#bolt_patterns_read\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
